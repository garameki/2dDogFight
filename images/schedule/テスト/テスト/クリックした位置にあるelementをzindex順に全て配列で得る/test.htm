<!DOCTYPE html><html><head><script type='text/javascript'>

/*
	注意：divのchildはposition:relativeでないと、divにoffsetWidthとoffsetHeightが付かないよクリック等に反応しないよ

	注意：body以外のelement.style.zIndexにはすべてNumZindex()で連番を振らないと、ソートできないよ
*/





var Counter=function(start){
	var num=start;
	return function(){
		return num++;
	};
};
var NumZindex=new Counter(2);

var NumCanvas=new Counter(0);
var makeCanvas=function(){
	var ele=document.createElement('canvas');
	ele.setAttribute('id','Canvas'+NumCanvas().toString());
	ele.width=200;
	ele.height=50;
//	ele.style.position='absolute';
	ele.style.position='relative';
	ele.style.zIndex=NumZindex();
	var ctx=ele.getContext('2d');
	ctx.font="bold 30px 'ＭＳ 明朝'";
	ctx.fillStyle='green';
	ctx.fillText('古今東西',0,30);

	ele.onclick=function(event){
		console.log("click",ele.id);
	};
	return ele;
};

var NumDiv=new Counter(0);
var makeDiv=function(left,top){
	var ele=document.createElement('div');
	ele.setAttribute('id','Div'+NumCanvas().toString());
	ele.style.position='absolute';
//	ele.style.position='relative';
	ele.style.left=left.toString()+'px';
	ele.style.top=top.toString()+'px';
	ele.style.zIndex=NumZindex();

	ele.onclick=function(event){
		console.log("click",ele.id);
	};
	return ele;

};



var sortByZindex = function(arr){
	//注意：body以外のelementにはすべてNumZindex()で連番を振らないと、ソートできないよ


	var test=false;


	//中央値を決めて左右に分けよう。
	var order = function(arr){
		var len,sum,med;
		var small,large;
		var smalls=new Array();
		var larges=new Array();

		sum=0;
		len=arr.length;
		if(len==1)return arr;
		if(len==0)return [];

		for(var ii=0;ii<len;ii++){
			sum+=Number(arr[ii].style.zIndex);
		};
		med=sum/len;
if(test)console.log("len=",len,"  med=",med,"   sum=",sum);

		for(var ii=0;ii<len;ii++){
			if(arr[ii].style.zIndex>med){
				larges.push(arr[ii]);

if(test)console.log("large");
			}else if(arr[ii].style.zIndex==med){
				if(Math.random()*1000>500){
					larges.push(arr[ii]);

if(test)console.log("large");
				}else{
					smalls.push(arr[ii]);

if(test)console.log("small");
				};
			}else{
				smalls.push(arr[ii]);

if(test)console.log("small");
			};
		};
		small=order(smalls);
		large=order(larges);
//		small.splice(small.length,0,large);
//		return small.concat(larges);
		return larges.concat(smalls);
	};

	var res = order(arr);
	return res;
};


//マウスアップされたときにその上空にあるelementを重なり順に拾い上げるスクリプト。gUpperElementsMouseupに入る
var gUpperElementsMouseup=[];
var gUpperElementsMousedown=[];
var getUpperElements=function(event){


	//注意：divのchildはposition:relativeでないと、divにoffsetWidthとoffsetHeightが付かないよクリック等に反応しないよ
	//注意：body以外のelement.style.zIndexにはすべてNumZindex()で連番を振っておくこと

	var test=false;

	if(test)console.log(event);
	if(test)console.log("mouseup(X:"+(event.clientX).toString()+"Y:"+(event.clientY).toString()+")");



	var cx=event.clientX;
	var cy=event.clientY;

	//DOMツリーを辿ります
	var bod=document.getElementsByTagName('body')[0];
	var search=function(ele){
		var eles=new Array();//クリック時に上空にあるelements 視点は宇宙にあり、windowは地表面
		var left=ele.offsetLeft;
		var top=ele.offsetTop;
		var parent=ele;
		while(parent.parentNode!=null && parent!=bod){
			parent=parent.parentNode;
			left+=parent.offsetLeft;
			top+=parent.offsetTop;
			if(test)console.log("top2=",parent.offsetTop,parent);
		};
		var right=left+ele.offsetWidth;
		var bottom=top+ele.offsetHeight;
		if(cx>left && cx<right && cy>top && cy<bottom)eles.push(ele);


		for(var ii=0,len=ele.children.length;ii<len;ii++){
			search(ele.children[ii]);
		};
		return eles;
	};
	var eles = search(bod);

	console.log("before childs=",eles);

	eles = sortByZindex(eles);

console.log("after childs");
for(var ii=0,len=eles.length;ii<len;ii++)console.log("2=",eles[ii],"  z-index=",eles[ii].style.zIndex);

	if(event.type=='mouseup'){
		gUpperElementsMouseup=eles;
	}else if(event.type=='mousedown'){
		gUpperElementsMousedown=eles;
	};
//	console.log("gUpperElementsMouseup=",gUpperElementsMouseup);
//	console.log("gUpperElementsMousedown=",gUpperElementsMousedown);
//	for(var ii=0,len=gUpperElementsMouseup.length;ii<len;ii++)console.log("element=",gUpperElementsMouseup[ii],"  z-index=",gUpperElementsMouseup[ii].style.zIndex);
};

window.onmousemove=function(event){
	window.status="mouse(x:"+event.clientX.toString()+" y:"+event.clientY.toString()+")";
	gMX=event.clientX;
	gMY=event.clientY;
};

window.addEventListener('mouseup',getUpperElements,true);
window.addEventListener('mousedown',getUpperElements,true);



onload=function(){

	var bod=document.getElementsByTagName('body')[0];
	var eleDiv=makeDiv(100,100);

//	eleDiv.style.backgroundColor='red';
	bod.appendChild(eleDiv);

	var ele=new Array();
	for(var ii=0;ii<5;ii++){
		ele.push(makeCanvas(ii));
		eleDiv.appendChild(ele[ele.length-1]);
	};

	var down=false;
	var mousex,mousey;
	eleDiv.onmousedown=function(event){
		mousex=event.clientX;
		mousey=event.clientY;

		divx=eleDiv.offsetLeft;
		divy=eleDiv.offsetTop;
		if(down==false){
			var hoge=setInterval(function(){
				if(down==false)clearInterval(hoge);
				eleDiv.style.left=(divx+gMX-mousex).toString()+'px';
				eleDiv.style.top=(divy+gMY-mousey).toString()+'px';
			},10);
		};
		down=true;
	};
	eleDiv.onmouseup=function(){
		down=false;
	};
};





</script></head><body><div style='z-index:20;'>adflkajdhflaksjdhfalksjdhfalks</div></body></html>
